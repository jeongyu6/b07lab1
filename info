Develop class Polynomial as follows:

  i. It has one field representing the coefficients of the polynomial using an array of
  double. A polynomial is assumed to have the form 𝑎 ! + 𝑎" 𝑥 " + ⋯ + 𝑎 #$" 𝑥 #$" .
  For example, the polynomial 6 − 2𝑥 + 5𝑥 % would be represented using the
  array [6, -2, 0, 5]

  ii. It has a no-argument constructor that sets the polynomial to zero (i.e. the
  corresponding array would be [0])

  iii. It has a constructor that takes an array of double as an argument and sets the
  coefficients accordingly

  iv. It has a method named add that takes one argument of type Polynomial and
  returns the polynomial resulting from adding the calling object and the argument

  v. It has a method named evaluate that takes one argument of type double
  representing a value of x and evaluates the polynomial accordingly. For example,
  if the polynomial is 6 − 2𝑥 + 5𝑥 % and evaluate(-1) is invoked, the result should
  be 3.

  vi. It has a method named hasRoot that takes one argument of type double and
  determines whether this value is a root of the polynomial or not. Note that a root
  is a value of x for which the polynomial evaluates to zero.

  vii.Replace the array representing the coefficients by two arrays: one representing the non-
  zero coefficients (of type double) and another one representing the corresponding
  exponents (of type int). For example, the polynomial 6 − 2𝑥 + 5𝑥 ! would be represented
  using the arrays [6, -2, 5] and [0, 1, 3]
  Update the existing methods accordingly

  Viii. Add a method named multiply that takes one argument of type Polynomial and returns
  the polynomial resulting from multiplying the calling object and the argument. The
  resulting polynomial should not contain redundant exponents.

  V. Add a constructor that takes one argument of type File and initializes the polynomial
   based on the contents of the file. You can assume that the file contains one line with no
  whitespaces representing a valid polynomial. For example: the line 5-3x2+7x8
  corresponds to the polynomial 5 − 3𝑥 " + 7𝑥 #
  Hint: you might want to use the following methods: split of the String class, parseInt of
  the Integer class, and parseDouble of the Double class

  Vi. Add a method named saveToFile that takes one argument of type String representing a
  file name and saves the polynomial in textual format in the corresponding file (similar to
  the format used in part d)
